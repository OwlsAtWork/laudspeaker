# To build : docker build -f Dockerfile.dev.server -t laudspeaker:api-latest .
# To run: docker run -it -p 3001:3001 --rm laudspeaker-api:latest
FROM node:16 as build
WORKDIR /app
COPY ./packages/server/package.json /app
RUN npm install
COPY . /app
RUN npm run build:server

FROM node:16 As Development
ARG NODE_ENV=development
ENV NODE_ENV=${NODE_ENV}
ENV MAGIC_EMAIL_KEY=${MAGIC_EMAIL_KEY}
ENV MAGIC_EMAIL_DOMAIN=${MAGIC_EMAIL_DOMAIN}
ENV SLACK_CLIENT_ID=${SLACK_CLIENT_ID}
ENV SLACK_CLIENT_SECRET=${SLACK_CLIENT_SECRET}
ENV SLACK_SIGNING_SECRET=${SLACK_SIGNING_SECRET}
ENV SENDING_TO_TEST_EMAIL=${SENDING_TO_TEST_EMAIL}
ENV TESTS_POSTHOG_PROJECT_ID=${TESTS_POSTHOG_PROJECT_ID}
ENV TESTS_POSTHOG_API_KEY=${TESTS_POSTHOG_API_KEY}
ENV TESTS_POSTHOG_HOST_URL=${TESTS_POSTHOG_HOST_URL}
ENV MAILGUN_API_KEY=${MAGIC_EMAIL_KEY}
ENV TESTS_INSTALLATION_JSON=${TESTS_INSTALLATION_JSON}
ENV TESTS_INSTALLATION_ID=${TESTS_INSTALLATION_ID}
ENV PORT=3001
ENV NODE_ENV=development
ENV FRONTEND_URL=localhost:3000
ENV ENVIRONMENT=development
ENV DATABASE_HOST=laudspeaker-postgres-1
ENV DATABASE_NAME=laudspeaker
ENV DATABASE_USER=postgres
ENV DATABASE_PASSWORD=password
ENV DATABASE_PORT=5432
ENV SYNCHRONIZE=true
ENV JWT_KEY=dev
ENV JWT_EXPIRES=365d
ENV REDIS_HOST=laudspeaker-redis-1
ENV REDIS_PORT=6379
ENV REDIS_PASSWORD=
ENV MONGOOSE_URL=mongodb://laudspeaker-mongo-1:27017/nest?directConnection=true
ENV MAILGUN_DOMAIN=${MAGIC_EMAIL_DOMAIN}
ENV MAILGUN_TEST_DOMAIN=${MAGIC_EMAIL_DOMAIN}
ENV SENDGRID_WEBHOOK_ENDPOINT=${SENDGRID_WEBHOOK_ENDPOINT}
ENV CLICKHOUSE_HOST=laudspeaker-clickhouse-1:8123
ENV CLICKHOUSE_USER=default
ENV CLICKHOUSE_PASSWORD=
ENV POSTHOG_HOST=https://app.posthog.com
ENV POSTHOG_KEY=phc_tXijmIHCxuV8CnUJUtbXbI7ZivlGIWfxURJwEpP3N9F
WORKDIR /app
COPY ./packages/server/package.json /app
RUN npm install --only=production
COPY --from=build /app/packages/server/dist /app/dist
EXPOSE 3001
CMD ["node", "dist/src/main.js"]
